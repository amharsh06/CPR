commit 3d189a259f77af1b726d01f2ed27b032c7d1b68c
Author: amharsh <kathrotiyaharsh15@gmail.com>
Date:   Sun Apr 7 16:14:41 2024 -0400

    Version 2

diff --git a/tokenization-git-log.txt b/tokenization-git-log.txt
new file mode 100644
index 0000000..4bb113b
--- /dev/null
+++ b/tokenization-git-log.txt
@@ -0,0 +1,761 @@
+commit 69a0ecd9fc4ba8646ab122ba88385b9febde1489
+Author: amharsh <kathrotiyaharsh15@gmail.com>
+Date:   Sun Apr 7 16:14:41 2024 -0400
+
+    Version 2
+
+diff --git a/tokenizing.c b/tokenizing.c
+index fbcf8f4..89b6e02 100644
+--- a/tokenizing.c
++++ b/tokenizing.c
+@@ -1,6 +1,8 @@
+ #define _CRT_SECURE_NO_WARNINGS //Define error and warnings in the code.
+ #define BUFFER_SIZE 300 // define BUFFER_SIZE fixed size 300.
+ #include "tokenizing.h" // Include the custom header file for the tokenizing function prototype
++#include <stdio.h> 
++#include <string.h>
+ // Vl
+ void tokenizing(void)
+ {
+@@ -25,6 +27,27 @@ void tokenizing(void)
+         }
+     } while (strcmp(words, "q") != 0);
+     printf("*** End of tokenizing Words Demo ***\n\n");
++
++   // V2
++     
++    printf("*** Start of Tokenizing Phrases Demo ***\n"); 
++    char phrases[BUFFER_SIZE]; // Create an array to hold the input phrases, with length defined by BUFFER_SIZE
++    char* nextPhrase = NULL; // Pointer to hold the address of the next tokenized phrases
++    int phrasesCounter;  //defined variable integer phrasesCounter
++    do {
++        printf("Type a few phrases separated by comma (q - to quit) :\n"); 
++        fgets(phrases, BUFFER_SIZE, stdin);// Read a input from the user
++        phrases[strlen(phrases) - 1] = '\0'; // Replace the newline character from fgets with a string terminator
++        if (strcmp(phrases, "q") != 0) {  // Check if the input is not 'q' (to quit)
++            nextPhrase = strtok(phrases, ",");
++            phrasesCounter = 1;
++            while (nextPhrase) {
++                printf("Phrase #%d is \'%s\'\n", phrasesCounter++, nextPhrase); // Print each phrase.
++                nextPhrase = strtok(NULL, ","); // Continue to tokenize the rest of the phrases.
++            }
++        }
++    } while (strcmp(phrases, "q") != 0); 
++    printf("*** End of Tokenizing Phrases Demo ***\n\n");
+ }
+ // Main function of the program.
+ int main() {
+
+commit 9b9fc98ec4da49bde72da1f971b1e3b44e2524de
+Author: amharsh <kathrotiyaharsh15@gmail.com>
+Date:   Sun Apr 7 15:08:35 2024 -0400
+
+    Add project files.
+
+diff --git a/ConsoleApplication3.sln b/ConsoleApplication3.sln
+new file mode 100644
+index 0000000..a2fc4df
+--- /dev/null
++++ b/ConsoleApplication3.sln
+@@ -0,0 +1,31 @@
++ï»¿
++Microsoft Visual Studio Solution File, Format Version 12.00
++# Visual Studio Version 17
++VisualStudioVersion = 17.8.34330.188
++MinimumVisualStudioVersion = 10.0.40219.1
++Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "ConsoleApplication3", "ConsoleApplication3.vcxproj", "{890C536C-DD80-45D8-8717-920199FFBFD7}"
++EndProject
++Global
++	GlobalSection(SolutionConfigurationPlatforms) = preSolution
++		Debug|x64 = Debug|x64
++		Debug|x86 = Debug|x86
++		Release|x64 = Release|x64
++		Release|x86 = Release|x86
++	EndGlobalSection
++	GlobalSection(ProjectConfigurationPlatforms) = postSolution
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x64.ActiveCfg = Debug|x64
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x64.Build.0 = Debug|x64
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x86.ActiveCfg = Debug|Win32
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x86.Build.0 = Debug|Win32
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x64.ActiveCfg = Release|x64
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x64.Build.0 = Release|x64
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x86.ActiveCfg = Release|Win32
++		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x86.Build.0 = Release|Win32
++	EndGlobalSection
++	GlobalSection(SolutionProperties) = preSolution
++		HideSolutionNode = FALSE
++	EndGlobalSection
++	GlobalSection(ExtensibilityGlobals) = postSolution
++		SolutionGuid = {BB1DD5C0-9212-4001-B360-8E20B767DA76}
++	EndGlobalSection
++EndGlobal
+diff --git a/ConsoleApplication3.vcxproj b/ConsoleApplication3.vcxproj
+new file mode 100644
+index 0000000..ae4b7a5
+--- /dev/null
++++ b/ConsoleApplication3.vcxproj
+@@ -0,0 +1,135 @@
++<?xml version="1.0" encoding="utf-8"?>
++<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
++  <ItemGroup Label="ProjectConfigurations">
++    <ProjectConfiguration Include="Debug|Win32">
++      <Configuration>Debug</Configuration>
++      <Platform>Win32</Platform>
++    </ProjectConfiguration>
++    <ProjectConfiguration Include="Release|Win32">
++      <Configuration>Release</Configuration>
++      <Platform>Win32</Platform>
++    </ProjectConfiguration>
++    <ProjectConfiguration Include="Debug|x64">
++      <Configuration>Debug</Configuration>
++      <Platform>x64</Platform>
++    </ProjectConfiguration>
++    <ProjectConfiguration Include="Release|x64">
++      <Configuration>Release</Configuration>
++      <Platform>x64</Platform>
++    </ProjectConfiguration>
++  </ItemGroup>
++  <PropertyGroup Label="Globals">
++    <VCProjectVersion>17.0</VCProjectVersion>
++    <Keyword>Win32Proj</Keyword>
++    <ProjectGuid>{890c536c-dd80-45d8-8717-920199ffbfd7}</ProjectGuid>
++    <RootNamespace>ConsoleApplication3</RootNamespace>
++    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
++  </PropertyGroup>
++  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
++  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
++    <ConfigurationType>Application</ConfigurationType>
++    <UseDebugLibraries>true</UseDebugLibraries>
++    <PlatformToolset>v143</PlatformToolset>
++    <CharacterSet>Unicode</CharacterSet>
++  </PropertyGroup>
++  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
++    <ConfigurationType>Application</ConfigurationType>
++    <UseDebugLibraries>false</UseDebugLibraries>
++    <PlatformToolset>v143</PlatformToolset>
++    <WholeProgramOptimization>true</WholeProgramOptimization>
++    <CharacterSet>Unicode</CharacterSet>
++  </PropertyGroup>
++  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
++    <ConfigurationType>Application</ConfigurationType>
++    <UseDebugLibraries>true</UseDebugLibraries>
++    <PlatformToolset>v143</PlatformToolset>
++    <CharacterSet>Unicode</CharacterSet>
++  </PropertyGroup>
++  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
++    <ConfigurationType>Application</ConfigurationType>
++    <UseDebugLibraries>false</UseDebugLibraries>
++    <PlatformToolset>v143</PlatformToolset>
++    <WholeProgramOptimization>true</WholeProgramOptimization>
++    <CharacterSet>Unicode</CharacterSet>
++  </PropertyGroup>
++  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
++  <ImportGroup Label="ExtensionSettings">
++  </ImportGroup>
++  <ImportGroup Label="Shared">
++  </ImportGroup>
++  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
++    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
++  </ImportGroup>
++  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
++    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
++  </ImportGroup>
++  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
++    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
++  </ImportGroup>
++  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
++    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
++  </ImportGroup>
++  <PropertyGroup Label="UserMacros" />
++  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
++    <ClCompile>
++      <WarningLevel>Level3</WarningLevel>
++      <SDLCheck>true</SDLCheck>
++      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
++      <ConformanceMode>true</ConformanceMode>
++    </ClCompile>
++    <Link>
++      <SubSystem>Console</SubSystem>
++      <GenerateDebugInformation>true</GenerateDebugInformation>
++    </Link>
++  </ItemDefinitionGroup>
++  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
++    <ClCompile>
++      <WarningLevel>Level3</WarningLevel>
++      <FunctionLevelLinking>true</FunctionLevelLinking>
++      <IntrinsicFunctions>true</IntrinsicFunctions>
++      <SDLCheck>true</SDLCheck>
++      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
++      <ConformanceMode>true</ConformanceMode>
++    </ClCompile>
++    <Link>
++      <SubSystem>Console</SubSystem>
++      <EnableCOMDATFolding>true</EnableCOMDATFolding>
++      <OptimizeReferences>true</OptimizeReferences>
++      <GenerateDebugInformation>true</GenerateDebugInformation>
++    </Link>
++  </ItemDefinitionGroup>
++  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
++    <ClCompile>
++      <WarningLevel>Level3</WarningLevel>
++      <SDLCheck>true</SDLCheck>
++      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
++      <ConformanceMode>true</ConformanceMode>
++    </ClCompile>
++    <Link>
++      <SubSystem>Console</SubSystem>
++      <GenerateDebugInformation>true</GenerateDebugInformation>
++    </Link>
++  </ItemDefinitionGroup>
++  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
++    <ClCompile>
++      <WarningLevel>Level3</WarningLevel>
++      <FunctionLevelLinking>true</FunctionLevelLinking>
++      <IntrinsicFunctions>true</IntrinsicFunctions>
++      <SDLCheck>true</SDLCheck>
++      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
++      <ConformanceMode>true</ConformanceMode>
++    </ClCompile>
++    <Link>
++      <SubSystem>Console</SubSystem>
++      <EnableCOMDATFolding>true</EnableCOMDATFolding>
++      <OptimizeReferences>true</OptimizeReferences>
++      <GenerateDebugInformation>true</GenerateDebugInformation>
++    </Link>
++  </ItemDefinitionGroup>
++  <ItemGroup>
++    <ClCompile Include="tokenizing.c" />
++  </ItemGroup>
++  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
++  <ImportGroup Label="ExtensionTargets">
++  </ImportGroup>
++</Project>
+\ No newline at end of file
+diff --git a/ConsoleApplication3.vcxproj.filters b/ConsoleApplication3.vcxproj.filters
+new file mode 100644
+index 0000000..cbb7fc9
+--- /dev/null
++++ b/ConsoleApplication3.vcxproj.filters
+@@ -0,0 +1,22 @@
++ï»¿<?xml version="1.0" encoding="utf-8"?>
++<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
++  <ItemGroup>
++    <Filter Include="Source Files">
++      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
++      <Extensions>cpp;c;cc;cxx;c++;cppm;ixx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
++    </Filter>
++    <Filter Include="Header Files">
++      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
++      <Extensions>h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd</Extensions>
++    </Filter>
++    <Filter Include="Resource Files">
++      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
++      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
++    </Filter>
++  </ItemGroup>
++  <ItemGroup>
++    <ClCompile Include="tokenizing.c">
++      <Filter>Source Files</Filter>
++    </ClCompile>
++  </ItemGroup>
++</Project>
+\ No newline at end of file
+diff --git a/tokenizing.c b/tokenizing.c
+new file mode 100644
+index 0000000..fbcf8f4
+--- /dev/null
++++ b/tokenizing.c
+@@ -0,0 +1,33 @@
++#define _CRT_SECURE_NO_WARNINGS //Define error and warnings in the code.
++#define BUFFER_SIZE 300 // define BUFFER_SIZE fixed size 300.
++#include "tokenizing.h" // Include the custom header file for the tokenizing function prototype
++// Vl
++void tokenizing(void)
++{
++    printf("*** Start of Tokenizing Words Demo ***\n");
++    char words[BUFFER_SIZE]; // Create an array to hold the input words, with length defined by BUFFER_SIZE
++    char* nextWord = NULL; // Pointer to hold the address of the next tokenized word
++    int wordsCounter; //defined variable integer wordsCounter
++    // Do-While loop to keep prompting and processing until 'q' is entered
++    do {
++        printf("Type a few words separated by space (q - to quit) :\n");
++        fgets(words, BUFFER_SIZE, stdin); // Read a input from the user
++        words[strlen(words) - 1] = '\0'; // Replace the newline character from fgets with a string terminator
++        if (strcmp(words, "q") != 0)  // Check if the input is not 'q' (to quit)
++        {
++            nextWord = strtok(words, " ");
++            wordsCounter = 1;
++            while (nextWord)
++            {
++                printf("Word #%d is \'%s\'\n", wordsCounter++, nextWord);
++                nextWord = strtok(NULL, " ");
++            }
++        }
++    } while (strcmp(words, "q") != 0);
++    printf("*** End of tokenizing Words Demo ***\n\n");
++}
++// Main function of the program.
++int main() {
++    tokenizing(); // Calling the Function.
++    return 0;
++}
+\ No newline at end of file
+diff --git a/tokenizing.h b/tokenizing.h
+new file mode 100644
+index 0000000..ae300dc
+--- /dev/null
++++ b/tokenizing.h
+@@ -0,0 +1,6 @@
++#ifndef _TOKENIZING_H_
++#define _TOKENIZING_H_
++#include <stdio.h> // Include standard input/output library for functions like printf.
++#include <string.h> // Include string library for string manipulation functions like strcmp, strtok.
++void tokenizing(void); // This is used when the function is defined in a different file.
++#endif
+\ No newline at end of file
+
+commit 2cf10fe58bca93fc4b85dbed8dc1ef18811d6441
+Author: amharsh <kathrotiyaharsh15@gmail.com>
+Date:   Sun Apr 7 15:08:32 2024 -0400
+
+    Add .gitattributes and .gitignore.
+
+diff --git a/.gitattributes b/.gitattributes
+new file mode 100644
+index 0000000..1ff0c42
+--- /dev/null
++++ b/.gitattributes
+@@ -0,0 +1,63 @@
++###############################################################################
++# Set default behavior to automatically normalize line endings.
++###############################################################################
++* text=auto
++
++###############################################################################
++# Set default behavior for command prompt diff.
++#
++# This is need for earlier builds of msysgit that does not have it on by
++# default for csharp files.
++# Note: This is only used by command line
++###############################################################################
++#*.cs     diff=csharp
++
++###############################################################################
++# Set the merge driver for project and solution files
++#
++# Merging from the command prompt will add diff markers to the files if there
++# are conflicts (Merging from VS is not affected by the settings below, in VS
++# the diff markers are never inserted). Diff markers may cause the following 
++# file extensions to fail to load in VS. An alternative would be to treat
++# these files as binary and thus will always conflict and require user
++# intervention with every merge. To do so, just uncomment the entries below
++###############################################################################
++#*.sln       merge=binary
++#*.csproj    merge=binary
++#*.vbproj    merge=binary
++#*.vcxproj   merge=binary
++#*.vcproj    merge=binary
++#*.dbproj    merge=binary
++#*.fsproj    merge=binary
++#*.lsproj    merge=binary
++#*.wixproj   merge=binary
++#*.modelproj merge=binary
++#*.sqlproj   merge=binary
++#*.wwaproj   merge=binary
++
++###############################################################################
++# behavior for image files
++#
++# image files are treated as binary by default.
++###############################################################################
++#*.jpg   binary
++#*.png   binary
++#*.gif   binary
++
++###############################################################################
++# diff behavior for common document formats
++# 
++# Convert binary document formats to text before diffing them. This feature
++# is only available from the command line. Turn it on by uncommenting the 
++# entries below.
++###############################################################################
++#*.doc   diff=astextplain
++#*.DOC   diff=astextplain
++#*.docx  diff=astextplain
++#*.DOCX  diff=astextplain
++#*.dot   diff=astextplain
++#*.DOT   diff=astextplain
++#*.pdf   diff=astextplain
++#*.PDF   diff=astextplain
++#*.rtf   diff=astextplain
++#*.RTF   diff=astextplain
+diff --git a/.gitignore b/.gitignore
+new file mode 100644
+index 0000000..9491a2f
+--- /dev/null
++++ b/.gitignore
+@@ -0,0 +1,363 @@
++## Ignore Visual Studio temporary files, build results, and
++## files generated by popular Visual Studio add-ons.
++##
++## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore
++
++# User-specific files
++*.rsuser
++*.suo
++*.user
++*.userosscache
++*.sln.docstates
++
++# User-specific files (MonoDevelop/Xamarin Studio)
++*.userprefs
++
++# Mono auto generated files
++mono_crash.*
++
++# Build results
++[Dd]ebug/
++[Dd]ebugPublic/
++[Rr]elease/
++[Rr]eleases/
++x64/
++x86/
++[Ww][Ii][Nn]32/
++[Aa][Rr][Mm]/
++[Aa][Rr][Mm]64/
++bld/
++[Bb]in/
++[Oo]bj/
++[Oo]ut/
++[Ll]og/
++[Ll]ogs/
++
++# Visual Studio 2015/2017 cache/options directory
++.vs/
++# Uncomment if you have tasks that create the project's static files in wwwroot
++#wwwroot/
++
++# Visual Studio 2017 auto generated files
++Generated\ Files/
++
++# MSTest test Results
++[Tt]est[Rr]esult*/
++[Bb]uild[Ll]og.*
++
++# NUnit
++*.VisualState.xml
++TestResult.xml
++nunit-*.xml
++
++# Build Results of an ATL Project
++[Dd]ebugPS/
++[Rr]eleasePS/
++dlldata.c
++
++# Benchmark Results
++BenchmarkDotNet.Artifacts/
++
++# .NET Core
++project.lock.json
++project.fragment.lock.json
++artifacts/
++
++# ASP.NET Scaffolding
++ScaffoldingReadMe.txt
++
++# StyleCop
++StyleCopReport.xml
++
++# Files built by Visual Studio
++*_i.c
++*_p.c
++*_h.h
++*.ilk
++*.meta
++*.obj
++*.iobj
++*.pch
++*.pdb
++*.ipdb
++*.pgc
++*.pgd
++*.rsp
++*.sbr
++*.tlb
++*.tli
++*.tlh
++*.tmp
++*.tmp_proj
++*_wpftmp.csproj
++*.log
++*.vspscc
++*.vssscc
++.builds
++*.pidb
++*.svclog
++*.scc
++
++# Chutzpah Test files
++_Chutzpah*
++
++# Visual C++ cache files
++ipch/
++*.aps
++*.ncb
++*.opendb
++*.opensdf
++*.sdf
++*.cachefile
++*.VC.db
++*.VC.VC.opendb
++
++# Visual Studio profiler
++*.psess
++*.vsp
++*.vspx
++*.sap
++
++# Visual Studio Trace Files
++*.e2e
++
++# TFS 2012 Local Workspace
++$tf/
++
++# Guidance Automation Toolkit
++*.gpState
++
++# ReSharper is a .NET coding add-in
++_ReSharper*/
++*.[Rr]e[Ss]harper
++*.DotSettings.user
++
++# TeamCity is a build add-in
++_TeamCity*
++
++# DotCover is a Code Coverage Tool
++*.dotCover
++
++# AxoCover is a Code Coverage Tool
++.axoCover/*
++!.axoCover/settings.json
++
++# Coverlet is a free, cross platform Code Coverage Tool
++coverage*.json
++coverage*.xml
++coverage*.info
++
++# Visual Studio code coverage results
++*.coverage
++*.coveragexml
++
++# NCrunch
++_NCrunch_*
++.*crunch*.local.xml
++nCrunchTemp_*
++
++# MightyMoose
++*.mm.*
++AutoTest.Net/
++
++# Web workbench (sass)
++.sass-cache/
++
++# Installshield output folder
++[Ee]xpress/
++
++# DocProject is a documentation generator add-in
++DocProject/buildhelp/
++DocProject/Help/*.HxT
++DocProject/Help/*.HxC
++DocProject/Help/*.hhc
++DocProject/Help/*.hhk
++DocProject/Help/*.hhp
++DocProject/Help/Html2
++DocProject/Help/html
++
++# Click-Once directory
++publish/
++
++# Publish Web Output
++*.[Pp]ublish.xml
++*.azurePubxml
++# Note: Comment the next line if you want to checkin your web deploy settings,
++# but database connection strings (with potential passwords) will be unencrypted
++*.pubxml
++*.publishproj
++
++# Microsoft Azure Web App publish settings. Comment the next line if you want to
++# checkin your Azure Web App publish settings, but sensitive information contained
++# in these scripts will be unencrypted
++PublishScripts/
++
++# NuGet Packages
++*.nupkg
++# NuGet Symbol Packages
++*.snupkg
++# The packages folder can be ignored because of Package Restore
++**/[Pp]ackages/*
++# except build/, which is used as an MSBuild target.
++!**/[Pp]ackages/build/
++# Uncomment if necessary however generally it will be regenerated when needed
++#!**/[Pp]ackages/repositories.config
++# NuGet v3's project.json files produces more ignorable files
++*.nuget.props
++*.nuget.targets
++
++# Microsoft Azure Build Output
++csx/
++*.build.csdef
++
++# Microsoft Azure Emulator
++ecf/
++rcf/
++
++# Windows Store app package directories and files
++AppPackages/
++BundleArtifacts/
++Package.StoreAssociation.xml
++_pkginfo.txt
++*.appx
++*.appxbundle
++*.appxupload
++
++# Visual Studio cache files
++# files ending in .cache can be ignored
++*.[Cc]ache
++# but keep track of directories ending in .cache
++!?*.[Cc]ache/
++
++# Others
++ClientBin/
++~$*
++*~
++*.dbmdl
++*.dbproj.schemaview
++*.jfm
++*.pfx
++*.publishsettings
++orleans.codegen.cs
++
++# Including strong name files can present a security risk
++# (https://github.com/github/gitignore/pull/2483#issue-259490424)
++#*.snk
++
++# Since there are multiple workflows, uncomment next line to ignore bower_components
++# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
++#bower_components/
++
++# RIA/Silverlight projects
++Generated_Code/
++
++# Backup & report files from converting an old project file
++# to a newer Visual Studio version. Backup files are not needed,
++# because we have git ;-)
++_UpgradeReport_Files/
++Backup*/
++UpgradeLog*.XML
++UpgradeLog*.htm
++ServiceFabricBackup/
++*.rptproj.bak
++
++# SQL Server files
++*.mdf
++*.ldf
++*.ndf
++
++# Business Intelligence projects
++*.rdl.data
++*.bim.layout
++*.bim_*.settings
++*.rptproj.rsuser
++*- [Bb]ackup.rdl
++*- [Bb]ackup ([0-9]).rdl
++*- [Bb]ackup ([0-9][0-9]).rdl
++
++# Microsoft Fakes
++FakesAssemblies/
++
++# GhostDoc plugin setting file
++*.GhostDoc.xml
++
++# Node.js Tools for Visual Studio
++.ntvs_analysis.dat
++node_modules/
++
++# Visual Studio 6 build log
++*.plg
++
++# Visual Studio 6 workspace options file
++*.opt
++
++# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
++*.vbw
++
++# Visual Studio LightSwitch build output
++**/*.HTMLClient/GeneratedArtifacts
++**/*.DesktopClient/GeneratedArtifacts
++**/*.DesktopClient/ModelManifest.xml
++**/*.Server/GeneratedArtifacts
++**/*.Server/ModelManifest.xml
++_Pvt_Extensions
++
++# Paket dependency manager
++.paket/paket.exe
++paket-files/
++
++# FAKE - F# Make
++.fake/
++
++# CodeRush personal settings
++.cr/personal
++
++# Python Tools for Visual Studio (PTVS)
++__pycache__/
++*.pyc
++
++# Cake - Uncomment if you are using it
++# tools/**
++# !tools/packages.config
++
++# Tabs Studio
++*.tss
++
++# Telerik's JustMock configuration file
++*.jmconfig
++
++# BizTalk build output
++*.btp.cs
++*.btm.cs
++*.odx.cs
++*.xsd.cs
++
++# OpenCover UI analysis results
++OpenCover/
++
++# Azure Stream Analytics local run output
++ASALocalRun/
++
++# MSBuild Binary and Structured Log
++*.binlog
++
++# NVidia Nsight GPU debugger configuration file
++*.nvuser
++
++# MFractors (Xamarin productivity tool) working folder
++.mfractor/
++
++# Local History for Visual Studio
++.localhistory/
++
++# BeatPulse healthcheck temp database
++healthchecksdb
++
++# Backup folder for Package Reference Convert tool in Visual Studio 2017
++MigrationBackup/
++
++# Ionide (cross platform F# VS Code tools) working folder
++.ionide/
++
++# Fody - auto-generated XML schema
++FodyWeavers.xsd
+\ No newline at end of file
diff --git a/tokenizing.c b/tokenizing.c
index fbcf8f4..89b6e02 100644
--- a/tokenizing.c
+++ b/tokenizing.c
@@ -1,6 +1,8 @@
 #define _CRT_SECURE_NO_WARNINGS //Define error and warnings in the code.
 #define BUFFER_SIZE 300 // define BUFFER_SIZE fixed size 300.
 #include "tokenizing.h" // Include the custom header file for the tokenizing function prototype
+#include <stdio.h> 
+#include <string.h>
 // Vl
 void tokenizing(void)
 {
@@ -25,6 +27,27 @@ void tokenizing(void)
         }
     } while (strcmp(words, "q") != 0);
     printf("*** End of tokenizing Words Demo ***\n\n");
+
+   // V2
+     
+    printf("*** Start of Tokenizing Phrases Demo ***\n"); 
+    char phrases[BUFFER_SIZE]; // Create an array to hold the input phrases, with length defined by BUFFER_SIZE
+    char* nextPhrase = NULL; // Pointer to hold the address of the next tokenized phrases
+    int phrasesCounter;  //defined variable integer phrasesCounter
+    do {
+        printf("Type a few phrases separated by comma (q - to quit) :\n"); 
+        fgets(phrases, BUFFER_SIZE, stdin);// Read a input from the user
+        phrases[strlen(phrases) - 1] = '\0'; // Replace the newline character from fgets with a string terminator
+        if (strcmp(phrases, "q") != 0) {  // Check if the input is not 'q' (to quit)
+            nextPhrase = strtok(phrases, ",");
+            phrasesCounter = 1;
+            while (nextPhrase) {
+                printf("Phrase #%d is \'%s\'\n", phrasesCounter++, nextPhrase); // Print each phrase.
+                nextPhrase = strtok(NULL, ","); // Continue to tokenize the rest of the phrases.
+            }
+        }
+    } while (strcmp(phrases, "q") != 0); 
+    printf("*** End of Tokenizing Phrases Demo ***\n\n");
 }
 // Main function of the program.
 int main() {

commit 9b9fc98ec4da49bde72da1f971b1e3b44e2524de
Author: amharsh <kathrotiyaharsh15@gmail.com>
Date:   Sun Apr 7 15:08:35 2024 -0400

    Add project files.

diff --git a/ConsoleApplication3.sln b/ConsoleApplication3.sln
new file mode 100644
index 0000000..a2fc4df
--- /dev/null
+++ b/ConsoleApplication3.sln
@@ -0,0 +1,31 @@
+ï»¿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio Version 17
+VisualStudioVersion = 17.8.34330.188
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "ConsoleApplication3", "ConsoleApplication3.vcxproj", "{890C536C-DD80-45D8-8717-920199FFBFD7}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|x64 = Debug|x64
+		Debug|x86 = Debug|x86
+		Release|x64 = Release|x64
+		Release|x86 = Release|x86
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x64.ActiveCfg = Debug|x64
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x64.Build.0 = Debug|x64
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x86.ActiveCfg = Debug|Win32
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Debug|x86.Build.0 = Debug|Win32
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x64.ActiveCfg = Release|x64
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x64.Build.0 = Release|x64
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x86.ActiveCfg = Release|Win32
+		{890C536C-DD80-45D8-8717-920199FFBFD7}.Release|x86.Build.0 = Release|Win32
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+	GlobalSection(ExtensibilityGlobals) = postSolution
+		SolutionGuid = {BB1DD5C0-9212-4001-B360-8E20B767DA76}
+	EndGlobalSection
+EndGlobal
diff --git a/ConsoleApplication3.vcxproj b/ConsoleApplication3.vcxproj
new file mode 100644
index 0000000..ae4b7a5
--- /dev/null
+++ b/ConsoleApplication3.vcxproj
@@ -0,0 +1,135 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <VCProjectVersion>17.0</VCProjectVersion>
+    <Keyword>Win32Proj</Keyword>
+    <ProjectGuid>{890c536c-dd80-45d8-8717-920199ffbfd7}</ProjectGuid>
+    <RootNamespace>ConsoleApplication3</RootNamespace>
+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v143</PlatformToolset>
+    <CharacterSet>Unicode</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v143</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>Unicode</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v143</PlatformToolset>
+    <CharacterSet>Unicode</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v143</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>Unicode</CharacterSet>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="Shared">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <SDLCheck>true</SDLCheck>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ConformanceMode>true</ConformanceMode>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <SDLCheck>true</SDLCheck>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ConformanceMode>true</ConformanceMode>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <SDLCheck>true</SDLCheck>
+      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ConformanceMode>true</ConformanceMode>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <SDLCheck>true</SDLCheck>
+      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ConformanceMode>true</ConformanceMode>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="tokenizing.c" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/ConsoleApplication3.vcxproj.filters b/ConsoleApplication3.vcxproj.filters
new file mode 100644
index 0000000..cbb7fc9
--- /dev/null
+++ b/ConsoleApplication3.vcxproj.filters
@@ -0,0 +1,22 @@
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup>
+    <Filter Include="Source Files">
+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
+      <Extensions>cpp;c;cc;cxx;c++;cppm;ixx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
+    </Filter>
+    <Filter Include="Header Files">
+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
+      <Extensions>h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd</Extensions>
+    </Filter>
+    <Filter Include="Resource Files">
+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
+    </Filter>
+  </ItemGroup>
+  <ItemGroup>
+    <ClCompile Include="tokenizing.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff --git a/tokenizing.c b/tokenizing.c
new file mode 100644
index 0000000..fbcf8f4
--- /dev/null
+++ b/tokenizing.c
@@ -0,0 +1,33 @@
+#define _CRT_SECURE_NO_WARNINGS //Define error and warnings in the code.
+#define BUFFER_SIZE 300 // define BUFFER_SIZE fixed size 300.
+#include "tokenizing.h" // Include the custom header file for the tokenizing function prototype
+// Vl
+void tokenizing(void)
+{
+    printf("*** Start of Tokenizing Words Demo ***\n");
+    char words[BUFFER_SIZE]; // Create an array to hold the input words, with length defined by BUFFER_SIZE
+    char* nextWord = NULL; // Pointer to hold the address of the next tokenized word
+    int wordsCounter; //defined variable integer wordsCounter
+    // Do-While loop to keep prompting and processing until 'q' is entered
+    do {
+        printf("Type a few words separated by space (q - to quit) :\n");
+        fgets(words, BUFFER_SIZE, stdin); // Read a input from the user
+        words[strlen(words) - 1] = '\0'; // Replace the newline character from fgets with a string terminator
+        if (strcmp(words, "q") != 0)  // Check if the input is not 'q' (to quit)
+        {
+            nextWord = strtok(words, " ");
+            wordsCounter = 1;
+            while (nextWord)
+            {
+                printf("Word #%d is \'%s\'\n", wordsCounter++, nextWord);
+                nextWord = strtok(NULL, " ");
+            }
+        }
+    } while (strcmp(words, "q") != 0);
+    printf("*** End of tokenizing Words Demo ***\n\n");
+}
+// Main function of the program.
+int main() {
+    tokenizing(); // Calling the Function.
+    return 0;
+}
\ No newline at end of file
diff --git a/tokenizing.h b/tokenizing.h
new file mode 100644
index 0000000..ae300dc
--- /dev/null
+++ b/tokenizing.h
@@ -0,0 +1,6 @@
+#ifndef _TOKENIZING_H_
+#define _TOKENIZING_H_
+#include <stdio.h> // Include standard input/output library for functions like printf.
+#include <string.h> // Include string library for string manipulation functions like strcmp, strtok.
+void tokenizing(void); // This is used when the function is defined in a different file.
+#endif
\ No newline at end of file

commit 2cf10fe58bca93fc4b85dbed8dc1ef18811d6441
Author: amharsh <kathrotiyaharsh15@gmail.com>
Date:   Sun Apr 7 15:08:32 2024 -0400

    Add .gitattributes and .gitignore.

diff --git a/.gitattributes b/.gitattributes
new file mode 100644
index 0000000..1ff0c42
--- /dev/null
+++ b/.gitattributes
@@ -0,0 +1,63 @@
+###############################################################################
+# Set default behavior to automatically normalize line endings.
+###############################################################################
+* text=auto
+
+###############################################################################
+# Set default behavior for command prompt diff.
+#
+# This is need for earlier builds of msysgit that does not have it on by
+# default for csharp files.
+# Note: This is only used by command line
+###############################################################################
+#*.cs     diff=csharp
+
+###############################################################################
+# Set the merge driver for project and solution files
+#
+# Merging from the command prompt will add diff markers to the files if there
+# are conflicts (Merging from VS is not affected by the settings below, in VS
+# the diff markers are never inserted). Diff markers may cause the following 
+# file extensions to fail to load in VS. An alternative would be to treat
+# these files as binary and thus will always conflict and require user
+# intervention with every merge. To do so, just uncomment the entries below
+###############################################################################
+#*.sln       merge=binary
+#*.csproj    merge=binary
+#*.vbproj    merge=binary
+#*.vcxproj   merge=binary
+#*.vcproj    merge=binary
+#*.dbproj    merge=binary
+#*.fsproj    merge=binary
+#*.lsproj    merge=binary
+#*.wixproj   merge=binary
+#*.modelproj merge=binary
+#*.sqlproj   merge=binary
+#*.wwaproj   merge=binary
+
+###############################################################################
+# behavior for image files
+#
+# image files are treated as binary by default.
+###############################################################################
+#*.jpg   binary
+#*.png   binary
+#*.gif   binary
+
+###############################################################################
+# diff behavior for common document formats
+# 
+# Convert binary document formats to text before diffing them. This feature
+# is only available from the command line. Turn it on by uncommenting the 
+# entries below.
+###############################################################################
+#*.doc   diff=astextplain
+#*.DOC   diff=astextplain
+#*.docx  diff=astextplain
+#*.DOCX  diff=astextplain
+#*.dot   diff=astextplain
+#*.DOT   diff=astextplain
+#*.pdf   diff=astextplain
+#*.PDF   diff=astextplain
+#*.rtf   diff=astextplain
+#*.RTF   diff=astextplain
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..9491a2f
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,363 @@
+## Ignore Visual Studio temporary files, build results, and
+## files generated by popular Visual Studio add-ons.
+##
+## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore
+
+# User-specific files
+*.rsuser
+*.suo
+*.user
+*.userosscache
+*.sln.docstates
+
+# User-specific files (MonoDevelop/Xamarin Studio)
+*.userprefs
+
+# Mono auto generated files
+mono_crash.*
+
+# Build results
+[Dd]ebug/
+[Dd]ebugPublic/
+[Rr]elease/
+[Rr]eleases/
+x64/
+x86/
+[Ww][Ii][Nn]32/
+[Aa][Rr][Mm]/
+[Aa][Rr][Mm]64/
+bld/
+[Bb]in/
+[Oo]bj/
+[Oo]ut/
+[Ll]og/
+[Ll]ogs/
+
+# Visual Studio 2015/2017 cache/options directory
+.vs/
+# Uncomment if you have tasks that create the project's static files in wwwroot
+#wwwroot/
+
+# Visual Studio 2017 auto generated files
+Generated\ Files/
+
+# MSTest test Results
+[Tt]est[Rr]esult*/
+[Bb]uild[Ll]og.*
+
+# NUnit
+*.VisualState.xml
+TestResult.xml
+nunit-*.xml
+
+# Build Results of an ATL Project
+[Dd]ebugPS/
+[Rr]eleasePS/
+dlldata.c
+
+# Benchmark Results
+BenchmarkDotNet.Artifacts/
+
+# .NET Core
+project.lock.json
+project.fragment.lock.json
+artifacts/
+
+# ASP.NET Scaffolding
+ScaffoldingReadMe.txt
+
+# StyleCop
+StyleCopReport.xml
+
+# Files built by Visual Studio
+*_i.c
+*_p.c
+*_h.h
+*.ilk
+*.meta
+*.obj
+*.iobj
+*.pch
+*.pdb
+*.ipdb
+*.pgc
+*.pgd
+*.rsp
+*.sbr
+*.tlb
+*.tli
+*.tlh
+*.tmp
+*.tmp_proj
+*_wpftmp.csproj
+*.log
+*.vspscc
+*.vssscc
+.builds
+*.pidb
+*.svclog
+*.scc
+
+# Chutzpah Test files
+_Chutzpah*
+
+# Visual C++ cache files
+ipch/
+*.aps
+*.ncb
+*.opendb
+*.opensdf
+*.sdf
+*.cachefile
+*.VC.db
+*.VC.VC.opendb
+
+# Visual Studio profiler
+*.psess
+*.vsp
+*.vspx
+*.sap
+
+# Visual Studio Trace Files
+*.e2e
+
+# TFS 2012 Local Workspace
+$tf/
+
+# Guidance Automation Toolkit
+*.gpState
+
+# ReSharper is a .NET coding add-in
+_ReSharper*/
+*.[Rr]e[Ss]harper
+*.DotSettings.user
+
+# TeamCity is a build add-in
+_TeamCity*
+
+# DotCover is a Code Coverage Tool
+*.dotCover
+
+# AxoCover is a Code Coverage Tool
+.axoCover/*
+!.axoCover/settings.json
+
+# Coverlet is a free, cross platform Code Coverage Tool
+coverage*.json
+coverage*.xml
+coverage*.info
+
+# Visual Studio code coverage results
+*.coverage
+*.coveragexml
+
+# NCrunch
+_NCrunch_*
+.*crunch*.local.xml
+nCrunchTemp_*
+
+# MightyMoose
+*.mm.*
+AutoTest.Net/
+
+# Web workbench (sass)
+.sass-cache/
+
+# Installshield output folder
+[Ee]xpress/
+
+# DocProject is a documentation generator add-in
+DocProject/buildhelp/
+DocProject/Help/*.HxT
+DocProject/Help/*.HxC
+DocProject/Help/*.hhc
+DocProject/Help/*.hhk
+DocProject/Help/*.hhp
+DocProject/Help/Html2
+DocProject/Help/html
+
+# Click-Once directory
+publish/
+
+# Publish Web Output
+*.[Pp]ublish.xml
+*.azurePubxml
+# Note: Comment the next line if you want to checkin your web deploy settings,
+# but database connection strings (with potential passwords) will be unencrypted
+*.pubxml
+*.publishproj
+
+# Microsoft Azure Web App publish settings. Comment the next line if you want to
+# checkin your Azure Web App publish settings, but sensitive information contained
+# in these scripts will be unencrypted
+PublishScripts/
+
+# NuGet Packages
+*.nupkg
+# NuGet Symbol Packages
+*.snupkg
+# The packages folder can be ignored because of Package Restore
+**/[Pp]ackages/*
+# except build/, which is used as an MSBuild target.
+!**/[Pp]ackages/build/
+# Uncomment if necessary however generally it will be regenerated when needed
+#!**/[Pp]ackages/repositories.config
+# NuGet v3's project.json files produces more ignorable files
+*.nuget.props
+*.nuget.targets
+
+# Microsoft Azure Build Output
+csx/
+*.build.csdef
+
+# Microsoft Azure Emulator
+ecf/
+rcf/
+
+# Windows Store app package directories and files
+AppPackages/
+BundleArtifacts/
+Package.StoreAssociation.xml
+_pkginfo.txt
+*.appx
+*.appxbundle
+*.appxupload
+
+# Visual Studio cache files
+# files ending in .cache can be ignored
+*.[Cc]ache
+# but keep track of directories ending in .cache
+!?*.[Cc]ache/
+
+# Others
+ClientBin/
+~$*
+*~
+*.dbmdl
+*.dbproj.schemaview
+*.jfm
+*.pfx
+*.publishsettings
+orleans.codegen.cs
+
+# Including strong name files can present a security risk
+# (https://github.com/github/gitignore/pull/2483#issue-259490424)
+#*.snk
+
+# Since there are multiple workflows, uncomment next line to ignore bower_components
+# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
+#bower_components/
+
+# RIA/Silverlight projects
+Generated_Code/
+
+# Backup & report files from converting an old project file
+# to a newer Visual Studio version. Backup files are not needed,
+# because we have git ;-)
+_UpgradeReport_Files/
+Backup*/
+UpgradeLog*.XML
+UpgradeLog*.htm
+ServiceFabricBackup/
+*.rptproj.bak
+
+# SQL Server files
+*.mdf
+*.ldf
+*.ndf
+
+# Business Intelligence projects
+*.rdl.data
+*.bim.layout
+*.bim_*.settings
+*.rptproj.rsuser
+*- [Bb]ackup.rdl
+*- [Bb]ackup ([0-9]).rdl
+*- [Bb]ackup ([0-9][0-9]).rdl
+
+# Microsoft Fakes
+FakesAssemblies/
+
+# GhostDoc plugin setting file
+*.GhostDoc.xml
+
+# Node.js Tools for Visual Studio
+.ntvs_analysis.dat
+node_modules/
+
+# Visual Studio 6 build log
+*.plg
+
+# Visual Studio 6 workspace options file
+*.opt
+
+# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
+*.vbw
+
+# Visual Studio LightSwitch build output
+**/*.HTMLClient/GeneratedArtifacts
+**/*.DesktopClient/GeneratedArtifacts
+**/*.DesktopClient/ModelManifest.xml
+**/*.Server/GeneratedArtifacts
+**/*.Server/ModelManifest.xml
+_Pvt_Extensions
+
+# Paket dependency manager
+.paket/paket.exe
+paket-files/
+
+# FAKE - F# Make
+.fake/
+
+# CodeRush personal settings
+.cr/personal
+
+# Python Tools for Visual Studio (PTVS)
+__pycache__/
+*.pyc
+
+# Cake - Uncomment if you are using it
+# tools/**
+# !tools/packages.config
+
+# Tabs Studio
+*.tss
+
+# Telerik's JustMock configuration file
+*.jmconfig
+
+# BizTalk build output
+*.btp.cs
+*.btm.cs
+*.odx.cs
+*.xsd.cs
+
+# OpenCover UI analysis results
+OpenCover/
+
+# Azure Stream Analytics local run output
+ASALocalRun/
+
+# MSBuild Binary and Structured Log
+*.binlog
+
+# NVidia Nsight GPU debugger configuration file
+*.nvuser
+
+# MFractors (Xamarin productivity tool) working folder
+.mfractor/
+
+# Local History for Visual Studio
+.localhistory/
+
+# BeatPulse healthcheck temp database
+healthchecksdb
+
+# Backup folder for Package Reference Convert tool in Visual Studio 2017
+MigrationBackup/
+
+# Ionide (cross platform F# VS Code tools) working folder
+.ionide/
+
+# Fody - auto-generated XML schema
+FodyWeavers.xsd
\ No newline at end of file
